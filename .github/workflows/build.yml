name: Build Executable

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Số phiên bản'
        required: true
        default: '1.0.0'
        type: string

permissions: write-all

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Generate version number
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=1.0.${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Build with script
        run: |
          .\build.bat

      - name: Move executable to root
        shell: pwsh
        run: |
          if (Test-Path "dist/main.exe") {
            Move-Item -Path "dist/main.exe" -Destination "app.exe" -Force
          } else {
            Write-Error "File dist/main.exe not found."
            exit 1
          }

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-v${{ steps.version.outputs.version }}
          path: app.exe

      - name: Create Release Description
        id: create_description
        run: |
          echo "## Application Release v${{ steps.version.outputs.version }}" > release_description.txt
          echo "" >> release_description.txt
          echo "### Changelog" >> release_description.txt
          echo "- New build from latest code" >> release_description.txt
          echo "- Build number: ${{ github.run_number }}" >> release_description.txt

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: app.exe
          body_path: release_description.txt
          name: Release v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
